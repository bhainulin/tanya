DROP TABLE USERS IF EXISTS;
DROP TABLE EVENT IF EXISTS;
DROP TABLE Auditorium IF EXISTS;
DROP TABLE EventAuditorium IF EXISTS;
DROP TABLE Ticket IF EXISTS;

CREATE TABLE USERS (
  id       INTEGER GENERATED BY DEFAULT AS IDENTITY(START WITH 100, INCREMENT BY 1) PRIMARY KEY,
  name     VARCHAR(30)  NOT NULL,
  email    VARCHAR(50)  NOT NULL,
  birthday DATE  NULL,
  systemMessage  VARCHAR(30) NULL,
  luckyCount INTEGER
);

CREATE TABLE EVENT (
  id       INTEGER GENERATED BY DEFAULT AS IDENTITY(START WITH 100, INCREMENT BY 1) PRIMARY KEY,
  name     VARCHAR(30)  NOT NULL,
  ticketBasePrice DOUBLE,
  rating   VARCHAR(30)  NULL
);

CREATE TABLE Auditorium (
  id       INTEGER GENERATED BY DEFAULT AS IDENTITY(START WITH 10, INCREMENT BY 1) PRIMARY KEY,
  name     VARCHAR(30)  NOT NULL,
  countOfSeats INTEGER,
  vipSeats   VARCHAR(30)  NULL
);

CREATE TABLE EventAuditorium (
  id       INTEGER GENERATED BY DEFAULT AS IDENTITY(START WITH 100, INCREMENT BY 1) PRIMARY KEY,
  eventId     INTEGER  NOT NULL,
  auditoriumId   INTEGER  NOT NULL,
  timeEvent TIMESTAMP   NULL,
  FOREIGN KEY (eventId) REFERENCES EVENT(id),
  FOREIGN KEY (auditoriumId) REFERENCES Auditorium(id)
);

CREATE TABLE Ticket (
  id       INTEGER GENERATED BY DEFAULT AS IDENTITY(START WITH 1, INCREMENT BY 1) PRIMARY KEY,
  eventAuditoriumId   INTEGER  NOT NULL,
  seat INTEGER,
  price DOUBLE,
  isFree BOOLEAN DEFAULT TRUE NOT NULL,
  FOREIGN KEY (eventAuditoriumId) REFERENCES EventAuditorium(id)
);


